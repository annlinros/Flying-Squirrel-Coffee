{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\shop-coffee\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\shop-coffee\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct,\n      cart: [],\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        products = [...products, singleItem];\n      });\n      this.setState({\n        products\n      });\n    };\n\n    this.getProduct = id => {\n      return this.state.products.find(item => item.id === id);\n    };\n\n    this.handleDetail = id => {\n      const product = this.getProduct(id);\n      this.setState({\n        detailProduct: product\n      });\n    };\n\n    this.addToCart = id => {\n      const cartItem = this.getProduct(id);\n      const cart = [...this.state.cart]; // If item is already in the cart,  increment the count\n\n      if (cart.indexOf(cartItem) >= 0) {\n        this.incrementCount(id);\n      } // If item is not added, add it to cart.\n      else {\n          cartItem.count = 1;\n          const price = cartItem.price;\n          cartItem.total = price;\n          this.setState({\n            cart: [...this.state.cart, cartItem]\n          }, () => this.addTotals());\n        }\n    };\n\n    this.openModal = id => {\n      const product = this.getProduct(id);\n      console.log(product);\n      this.setState({\n        modalProduct: product\n      });\n    };\n\n    this.incrementCount = id => {\n      let tempCart = [...this.state.cart];\n      const incrementedCartItem = tempCart.find(item => item.id === id);\n      incrementedCartItem.count += 1;\n      incrementedCartItem.total = incrementedCartItem.price * incrementedCartItem.count;\n      this.setState({\n        cart: [...tempCart]\n      }, this.addTotals());\n    };\n\n    this.decrementCount = id => {\n      let tempCart = [...this.state.cart];\n      const decrementedCartItem = tempCart.find(item => item.id === id);\n      decrementedCartItem.count -= 1;\n\n      if (decrementedCartItem.count === 0) {\n        this.removeCartItem(id);\n      } else {\n        decrementedCartItem.total = decrementedCartItem.price * decrementedCartItem.count;\n        this.setState({\n          cart: [...tempCart]\n        }, this.addTotals());\n      }\n    };\n\n    this.removeCartItem = id => {\n      const newCartItems = this.state.cart.filter(item => id !== item.id);\n      this.setState({\n        cart: [...newCartItems]\n      }, () => this.addTotals());\n    };\n\n    this.resetCart = () => {\n      this.setState({\n        cart: []\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let cartSubTotal = 0;\n      this.state.cart.map(item => cartSubTotal += item.total);\n      const tempTax = cartSubTotal * 0.1;\n      const cartTax = parseFloat(tempTax.toFixed(2));\n      const cartTotal = cartSubTotal + cartTax;\n      this.setState({\n        cartSubTotal,\n        cartTax,\n        cartTotal\n      });\n    };\n  }\n\n  //  setting \"products on state\"\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        incrementCount: this.incrementCount,\n        decrementCount: this.decrementCount,\n        removeCartItem: this.removeCartItem,\n        resetCart: this.resetCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\shop-coffee\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","forEach","item","singleItem","setState","getProduct","id","find","handleDetail","product","addToCart","cartItem","indexOf","incrementCount","count","price","total","addTotals","openModal","console","log","tempCart","incrementedCartItem","decrementCount","decrementedCartItem","removeCartItem","newCartItems","filter","resetCart","map","tempTax","parseFloat","toFixed","componentDidMount","render","closeModal","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { storeProducts, detailProduct } from \"./data\";\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    products: [],\r\n    detailProduct,\r\n    cart: [],\r\n    modalProduct: detailProduct,\r\n    cartSubTotal: 0,\r\n    cartTax: 0,\r\n    cartTotal: 0\r\n  };\r\n\r\n  //  setting \"products on state\"\r\n\r\n  componentDidMount() {\r\n    this.setProducts();\r\n  }\r\n\r\n  setProducts = () => {\r\n    let products = [];\r\n    storeProducts.forEach(item => {\r\n      const singleItem = { ...item };\r\n      products = [...products, singleItem];\r\n    });\r\n    this.setState({\r\n      products\r\n    });\r\n  };\r\n\r\n  // Handling the click event to show Product details.\r\n\r\n  getProduct = id => {\r\n    return this.state.products.find(item => item.id === id);\r\n  };\r\n  handleDetail = id => {\r\n    const product = this.getProduct(id);\r\n    this.setState({\r\n      detailProduct: product\r\n    });\r\n  };\r\n\r\n  // Add to Cart\r\n\r\n  addToCart = id => {\r\n\r\n    const cartItem = this.getProduct(id);\r\n\r\n    const cart = [...this.state.cart];\r\n\r\n    // If item is already in the cart,  increment the count\r\n\r\n    if (cart.indexOf(cartItem) >= 0) {\r\n      this.incrementCount(id);\r\n    }\r\n    // If item is not added, add it to cart.\r\n\r\n    else {\r\n      cartItem.count = 1;\r\n      const price = cartItem.price;\r\n      cartItem.total = price;\r\n\r\n      this.setState(\r\n        {\r\n          cart: [...this.state.cart, cartItem]\r\n        },\r\n        () => this.addTotals()\r\n      );\r\n    }\r\n  };\r\n  // Alert\r\n  \r\n  // Opening of Modal upon adding items to the cart\r\n\r\n  openModal = id => {\r\n    const product = this.getProduct(id);\r\n    console.log(product);\r\n    this.setState({\r\n      modalProduct: product\r\n    });\r\n  };\r\n\r\n  // Increment product count in cart\r\n\r\n  incrementCount = id => {\r\n    let tempCart = [...this.state.cart];\r\n\r\n    const incrementedCartItem = tempCart.find(item => item.id === id);\r\n    incrementedCartItem.count += 1;\r\n    incrementedCartItem.total =\r\n      incrementedCartItem.price * incrementedCartItem.count;\r\n\r\n    this.setState(\r\n      {\r\n        cart: [...tempCart]\r\n      },\r\n      this.addTotals()\r\n    );\r\n  };\r\n  // Decrement product count in cart\r\n\r\n  decrementCount = id => {\r\n    let tempCart = [...this.state.cart];\r\n\r\n    const decrementedCartItem = tempCart.find(item => item.id === id);\r\n\r\n    decrementedCartItem.count -= 1;\r\n    if (decrementedCartItem.count === 0) {\r\n      this.removeCartItem(id);\r\n    } else {\r\n      decrementedCartItem.total =\r\n        decrementedCartItem.price * decrementedCartItem.count;\r\n      this.setState(\r\n        {\r\n          cart: [...tempCart]\r\n        },\r\n        this.addTotals()\r\n      );\r\n    }\r\n  };\r\n\r\n  // Remove item from cart\r\n\r\n  removeCartItem = id => {\r\n\r\n    const newCartItems = this.state.cart.filter(item => id !== item.id);\r\n    this.setState(\r\n      {\r\n        cart: [...newCartItems]\r\n      },\r\n      () => this.addTotals()\r\n    );\r\n  };\r\n\r\n  // Reset cart\r\n\r\n  resetCart = () => {\r\n    this.setState(\r\n      {\r\n        cart: []\r\n      },\r\n      () => {\r\n        this.setProducts();\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n\r\n  //  Calculate total amount in cart\r\n  addTotals = () => {\r\n    let cartSubTotal = 0;\r\n    this.state.cart.map(item => (cartSubTotal += item.total));\r\n    const tempTax = cartSubTotal * 0.1;\r\n    const cartTax = parseFloat(tempTax.toFixed(2));\r\n    const cartTotal = cartSubTotal + cartTax;\r\n    this.setState({\r\n      cartSubTotal,\r\n      cartTax,\r\n      cartTotal\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleDetail: this.handleDetail,\r\n          addToCart: this.addToCart,\r\n          openModal: this.openModal,\r\n          closeModal: this.closeModal,\r\n          incrementCount: this.incrementCount,\r\n          decrementCount: this.decrementCount,\r\n          removeCartItem: this.removeCartItem,\r\n          resetCart: this.resetCart\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst ProductConsumer = ProductContext.Consumer;\r\nexport { ProductProvider, ProductConsumer };\r\n"]},"metadata":{},"sourceType":"module"}