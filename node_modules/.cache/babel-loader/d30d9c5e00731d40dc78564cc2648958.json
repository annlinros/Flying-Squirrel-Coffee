{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\shop-coffee - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\shop-coffee - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\shop-coffee - Copy\\\\src\\\\context.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nexport const ProductContext = React.createContext();\nexport const ProductProvider = props => {\n  // state = {\n  //   products: [],\n  //   detailProduct,\n  //   cart: [],\n  //   modalProduct: detailProduct,\n  //   cartSubTotal: 0,\n  //   cartTax: 0,\n  //   cartTotal: 0\n  // };\n  // state declaration\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        detailProduct = _useState4[0],\n        setDetailProduct = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cart = _useState6[0],\n        setCart = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cartSubTotal = _useState8[0],\n        setCartSubTotal = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        cartSubTax = _useState10[0],\n        setCartTax = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        cartTotal = _useState12[0],\n        setCartTotal = _useState12[1]; //  setting \"products on state\"\n\n\n  useEffect(() => {\n    settingProducts();\n  }, []);\n\n  const settingProducts = () => {\n    let products = [];\n    storeProducts.forEach(item => {\n      const singleItem = _objectSpread({}, item);\n\n      products = [...products, singleItem];\n    });\n    setProducts(products);\n    console.log(products);\n  }; // Handling the click event to show Product details.\n\n\n  const getProduct = id => {\n    return products.find(item => item.id === id);\n  };\n\n  const handleDetail = id => {\n    const product = getProduct(id);\n    setDetailProduct(product);\n  }; // Add to Cart\n\n\n  const addToCart = id => {\n    const cartItem = getProduct(id);\n    const newCart = [...cart]; // If item is already in the cart,  increment the count\n\n    if (cart.indexOf(cartItem) >= 0) {\n      incrementCount(id);\n    } // If item is not added, add it to cart.\n    else {\n        cartItem.count = 1;\n        const price = cartItem.price;\n        cartItem.total = price;\n        newCart.push(cartItem);\n        setCart(newCart);\n      }\n  }; // Opening of Modal upon adding items to the cart\n  // openModal = id => {\n  //   const product = getProduct(id);\n  //   setState({\n  //     modalProduct: product\n  //   });\n  // };\n  // Increment product count in cart\n\n\n  const incrementCount = id => {\n    let tempCart = [...cart];\n    const incrementedCartItem = tempCart.find(item => item.id === id);\n    incrementedCartItem.count += 1;\n    incrementedCartItem.total = incrementedCartItem.price * incrementedCartItem.count;\n    setCart(tempCart);\n  }; // Decrement product count in cart\n\n\n  const decrementCount = id => {\n    let tempCart = [...cart];\n    const decrementedCartItem = tempCart.find(item => item.id === id);\n    decrementedCartItem.count -= 1;\n\n    if (decrementedCartItem.count === 0) {\n      removeCartItem(id);\n    } else {\n      decrementedCartItem.total = decrementedCartItem.price * decrementedCartItem.count;\n      setCart(tempCart);\n    }\n  }; // // Remove item from cart\n\n\n  const removeCartItem = id => {\n    const newCartItems = cart.filter(item => id !== item.id);\n    setCart(newCartItems);\n  }; // // Reset cart\n  // resetCart = () => {\n  //   setState(\n  //     {\n  //       cart: []\n  //     },\n  //     () => {\n  //       setProducts();\n  //       addTotals();\n  //     }\n  //   );\n  // };\n  // //  Calculate total amount in cart\n\n\n  const addTotals = () => {\n    let cartSubTotal = 0;\n    cart.map(item => cartSubTotal += item.total);\n    const tempTax = cartSubTotal * 0.1;\n    const cartTax = parseFloat(tempTax.toFixed(2));\n    const cartTotal = cartSubTotal + cartTax;\n    setCartSubTotal(cartSubTotal);\n    setCartTax(cartTax);\n    setCartTotal(cartTotal);\n  };\n\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      handleDetail,\n      detailProduct,\n      addToCart,\n      cart,\n      removeCartItem,\n      incrementCount,\n      decrementCount,\n      cartSubTotal,\n      cartTax,\n      cartTotal\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\shop-coffee - Copy\\src\\context.js"],"names":["React","useState","useEffect","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","props","products","setProducts","setDetailProduct","cart","setCart","cartSubTotal","setCartSubTotal","cartSubTax","setCartTax","cartTotal","setCartTotal","settingProducts","forEach","item","singleItem","console","log","getProduct","id","find","handleDetail","product","addToCart","cartItem","newCart","indexOf","incrementCount","count","price","total","push","tempCart","incrementedCartItem","decrementCount","decrementedCartItem","removeCartItem","newCartItems","filter","addTotals","map","tempTax","cartTax","parseFloat","toFixed","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { storeProducts, detailProduct } from \"./data\";\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = props => {\r\n  // state = {\r\n  //   products: [],\r\n  //   detailProduct,\r\n  //   cart: [],\r\n  //   modalProduct: detailProduct,\r\n  //   cartSubTotal: 0,\r\n  //   cartTax: 0,\r\n  //   cartTotal: 0\r\n  // };\r\n\r\n  // state declaration\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [detailProduct, setDetailProduct] = useState({});\r\n  const [cart, setCart] = useState([]);\r\n  const [cartSubTotal, setCartSubTotal] = useState(0);\r\n  const [cartSubTax, setCartTax] = useState(0);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n\r\n  //  setting \"products on state\"\r\n\r\n  useEffect(() => {\r\n    settingProducts();\r\n  }, []);\r\n\r\n  const settingProducts = () => {\r\n    let products = [];\r\n    storeProducts.forEach(item => {\r\n      const singleItem = { ...item };\r\n      products = [...products, singleItem];\r\n    });\r\n    setProducts(products);\r\n    console.log(products);\r\n  };\r\n\r\n  // Handling the click event to show Product details.\r\n\r\n  const getProduct = id => {\r\n    return products.find(item => item.id === id);\r\n  };\r\n  const handleDetail = id => {\r\n    const product = getProduct(id);\r\n    setDetailProduct(product);\r\n  };\r\n\r\n  // Add to Cart\r\n\r\n  const addToCart = id => {\r\n    const cartItem = getProduct(id);\r\n\r\n    const newCart = [...cart];\r\n\r\n    // If item is already in the cart,  increment the count\r\n\r\n    if (cart.indexOf(cartItem) >= 0) {\r\n      incrementCount(id);\r\n    }\r\n    // If item is not added, add it to cart.\r\n    else {\r\n      cartItem.count = 1;\r\n      const price = cartItem.price;\r\n      cartItem.total = price;\r\n      newCart.push(cartItem);\r\n\r\n      setCart(newCart);\r\n    }\r\n  };\r\n\r\n  // Opening of Modal upon adding items to the cart\r\n\r\n  // openModal = id => {\r\n  //   const product = getProduct(id);\r\n  //   setState({\r\n  //     modalProduct: product\r\n  //   });\r\n  // };\r\n\r\n  // Increment product count in cart\r\n\r\n  const incrementCount = id => {\r\n    let tempCart = [...cart];\r\n\r\n    const incrementedCartItem = tempCart.find(item => item.id === id);\r\n    incrementedCartItem.count += 1;\r\n    incrementedCartItem.total =\r\n      incrementedCartItem.price * incrementedCartItem.count;\r\n\r\n    setCart(tempCart);\r\n  };\r\n\r\n  // Decrement product count in cart\r\n\r\n  const decrementCount = id => {\r\n    let tempCart = [...cart];\r\n\r\n    const decrementedCartItem = tempCart.find(item => item.id === id);\r\n\r\n    decrementedCartItem.count -= 1;\r\n    if (decrementedCartItem.count === 0) {\r\n      removeCartItem(id);\r\n    } else {\r\n      decrementedCartItem.total =\r\n        decrementedCartItem.price * decrementedCartItem.count;\r\n      setCart(tempCart);\r\n    }\r\n  };\r\n\r\n  // // Remove item from cart\r\n\r\n  const removeCartItem = id => {\r\n    const newCartItems = cart.filter(item => id !== item.id);\r\n    setCart(newCartItems);\r\n  };\r\n\r\n  // // Reset cart\r\n\r\n  // resetCart = () => {\r\n  //   setState(\r\n  //     {\r\n  //       cart: []\r\n  //     },\r\n  //     () => {\r\n  //       setProducts();\r\n  //       addTotals();\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  // //  Calculate total amount in cart\r\n const addTotals = () => {\r\n    let cartSubTotal = 0;\r\n    cart.map(item => (cartSubTotal += item.total));\r\n    const tempTax = cartSubTotal * 0.1;\r\n    const cartTax = parseFloat(tempTax.toFixed(2));\r\n    const cartTotal = cartSubTotal + cartTax;\r\n   setCartSubTotal(cartSubTotal);\r\n   setCartTax(cartTax);\r\n   setCartTotal(cartTotal)\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        products,\r\n        handleDetail,\r\n        detailProduct,\r\n        addToCart,\r\n        cart,\r\n        removeCartItem,\r\n        incrementCount,\r\n        decrementCount,\r\n        cartSubTotal,\r\n        cartTax,\r\n        cartTotal\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}